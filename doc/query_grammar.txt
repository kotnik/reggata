== Грамматика языка запросов ==

Выражение ::= Выражение 'ИЛИ' Слагаемое | Слагаемое
Слагаемое ::= Слагаемое 'И' Множитель | Слагаемое Множитель | Множитель
Множитель ::= НЕ Элемент | Элемент
Элемент ::= Тег | Поле | Директория | Пользователь | '(' Выражение ')'
Тег ::= Имя
Поле ::= Имя Операция_над_полем Значение_поля
Имя ::= Строка
Значение_поля ::= Строка | Число
Директория ::= 'dir:' Строка
Пользователь ::= 'user:' Строка
Операция_над_полем ::= '=' | '>' | '>=' | '<' | '<=' | '!=' | '~'
Строка ::= <Слово_без_пробелов_123, "Любые символы:#?!, но в кавычках", "Чтобы напечатать кавычку, \" добавить слеш или \\ два слеша, чтобы получить один слеш">
Число ::= <целое или вещественное, например: 123, 2.45>

Операция '~' соответствует SQL-операции LIKE.
Для простоты, операцию 'И' можно не указывать, т.е. "Тег1 Тег2" это "Тег1 И Тег2".

Примеры запросов:
1) Поиск среди объектов всех пользователей во всем хранилище
Фото И Море И Оля И Мама
Оля ИЛИ Мама ИЛИ Папа
(Фото ИЛИ Видео) И (Мама ИЛИ Папа)
Фото И Море И Оля И (Мама ИЛИ Папа ИЛИ Бабушка)
Фото И НЕ Море

2) Фотографии пользователей vlkv или lena помеченные данными тегами:
Фото И Море И Оля И Мама user:vlkv user:lena

3) Фотографии внутри одной или другой директории помеченные данными тегами:
Фото И Море И Оля И (Мама ИЛИ Папа ИЛИ Бабушка) dir:foto/2010 dir:foto/new

Связывать операцией И запросы по пользователям или директориям нет смысла:
Например вот такое лишено смысла: dir:foto/2010 И dir:foto/new
А также: user:vlkv И user:lena
т.к. каждый объект item или data_ref может принадлежать только одному пользователю или находиться только
в одной директории.

== Реализация запросов на SQL ==
Одним выражением SELECT можно выполнить следующие запросы:
1) Конъюнкция тегов или их отрицаний (AND_NOT_tags):
Тег1 И Тег2 И Тег3 И ...
Тег1 И НЕ Тег2 И Тег3 И НЕ Тег4 И ... (в любом порядке операция "И" применяется либо к "Тег", либо к "НЕ Тег")

2) Дизъюнкция тегов (OR_tags)
Тег1 ИЛИ Тег2 ИЛИ ...

3) Дизъюнкция тегов, кроме некоторых тегов:
(Тег1 ИЛИ Тег2 ИЛИ ...) И НЕ Тег4 И НЕ Тег5 И НЕ ...

4) Конъюнкция по полям (AND_fields):
Поле1=Знач1 И Поле2=Знач2 И ...

5) Дизъюнкция по полям (OR_fields):
Поле1=Знач1 ИЛИ Поле2=Знач2 ИЛИ ...

Все остальные более сложные запросы можно выполнить при помощи составных SELECT-выражений, с
применением операций UNION (ИЛИ), INTERSECT (И), EXCEPT (И НЕ). Такие сложные запросы, скорее всего
будут выполняться медленно, но возможно, что скорость все же будет приемлемой.

Выражение ::= Выражение ИЛИ Слагаемое | Слагаемое
Слагаемое ::= Слагаемое И Множитель | Слагаемое Множитель | Множитель
Множитель ::= Простое_выражение | НЕ Простое_выражение
Простое_выражение ::= AND_NOT_tags | OR_tags | AND_fields | OR_fields





	Что делать если путь внутри хранилища содержит пробелы?
	Как можно разрешить, чтобы частью тега могли быть знаки пунктуации (пусть и не все). Escape-последовательности?
	Разделитель дробной части чисел следует локализовать (точка или запятая)?
	Нужно иметь возможность локализовать логические операции языка запросов, например чтобы можно было по желанию заменить 'И' на 'AND'
	Если тег называется ИЛИ, т.е. совпадает с логической операцией, то его надо заключать в кавычки "ИЛИ"
	Если в запросе будет две и больше dir:directory1 И dir:directory2 то смысла в этом особого нет... Точно так же и для пользователей, т.к. каждый элемент принадлежит только одному пользователю.


