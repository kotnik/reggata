# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\mainwindow.ui'
#
# Created: Tue Oct 29 20:36:10 2013
#      by: PyQt4 UI code generator 4.10
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(_fromUtf8("MainWindow"))
        MainWindow.resize(659, 447)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(_fromUtf8(":/icons/icons/reggata.ico")), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setDockNestingEnabled(True)
        self.centralwidget = QtGui.QWidget(MainWindow)
        self.centralwidget.setObjectName(_fromUtf8("centralwidget"))
        self.verticalLayout_3 = QtGui.QVBoxLayout(self.centralwidget)
        self.verticalLayout_3.setObjectName(_fromUtf8("verticalLayout_3"))
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtGui.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 659, 26))
        self.menubar.setObjectName(_fromUtf8("menubar"))
        self.menuRepo = QtGui.QMenu(self.menubar)
        self.menuRepo.setObjectName(_fromUtf8("menuRepo"))
        self.menuFavoriteRepos = QtGui.QMenu(self.menuRepo)
        self.menuFavoriteRepos.setObjectName(_fromUtf8("menuFavoriteRepos"))
        self.menuUser = QtGui.QMenu(self.menubar)
        self.menuUser.setObjectName(_fromUtf8("menuUser"))
        self.menuTools = QtGui.QMenu(self.menubar)
        self.menuTools.setObjectName(_fromUtf8("menuTools"))
        self.menuHelp = QtGui.QMenu(self.menubar)
        self.menuHelp.setObjectName(_fromUtf8("menuHelp"))
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtGui.QStatusBar(MainWindow)
        self.statusbar.setObjectName(_fromUtf8("statusbar"))
        MainWindow.setStatusBar(self.statusbar)
        self.action_repo_create = QtGui.QAction(MainWindow)
        self.action_repo_create.setObjectName(_fromUtf8("action_repo_create"))
        self.action_repo_open = QtGui.QAction(MainWindow)
        self.action_repo_open.setObjectName(_fromUtf8("action_repo_open"))
        self.action_repo_close = QtGui.QAction(MainWindow)
        self.action_repo_close.setObjectName(_fromUtf8("action_repo_close"))
        self.action_item_add = QtGui.QAction(MainWindow)
        self.action_item_add.setObjectName(_fromUtf8("action_item_add"))
        self.action_user_create = QtGui.QAction(MainWindow)
        self.action_user_create.setObjectName(_fromUtf8("action_user_create"))
        self.action_user_login = QtGui.QAction(MainWindow)
        self.action_user_login.setObjectName(_fromUtf8("action_user_login"))
        self.action_user_logout = QtGui.QAction(MainWindow)
        self.action_user_logout.setObjectName(_fromUtf8("action_user_logout"))
        self.action_item_edit = QtGui.QAction(MainWindow)
        self.action_item_edit.setObjectName(_fromUtf8("action_item_edit"))
        self.action_item_add_many = QtGui.QAction(MainWindow)
        self.action_item_add_many.setObjectName(_fromUtf8("action_item_add_many"))
        self.action_user_change_pass = QtGui.QAction(MainWindow)
        self.action_user_change_pass.setObjectName(_fromUtf8("action_user_change_pass"))
        self.action_item_view = QtGui.QAction(MainWindow)
        self.action_item_view.setObjectName(_fromUtf8("action_item_view"))
        self.action_item_add_many_rec = QtGui.QAction(MainWindow)
        self.action_item_add_many_rec.setObjectName(_fromUtf8("action_item_add_many_rec"))
        self.action_item_delete = QtGui.QAction(MainWindow)
        self.action_item_delete.setObjectName(_fromUtf8("action_item_delete"))
        self.action_item_view_m3u = QtGui.QAction(MainWindow)
        self.action_item_view_m3u.setObjectName(_fromUtf8("action_item_view_m3u"))
        self.action_help_about = QtGui.QAction(MainWindow)
        self.action_help_about.setObjectName(_fromUtf8("action_help_about"))
        self.action_item_view_image_viewer = QtGui.QAction(MainWindow)
        self.action_item_view_image_viewer.setObjectName(_fromUtf8("action_item_view_image_viewer"))
        self.action_item_check_integrity = QtGui.QAction(MainWindow)
        self.action_item_check_integrity.setObjectName(_fromUtf8("action_item_check_integrity"))
        self.action_item_fix_history_rec_error = QtGui.QAction(MainWindow)
        self.action_item_fix_history_rec_error.setObjectName(_fromUtf8("action_item_fix_history_rec_error"))
        self.action_item_fix_hash_error = QtGui.QAction(MainWindow)
        self.action_item_fix_hash_error.setObjectName(_fromUtf8("action_item_fix_hash_error"))
        self.action_item_update_file_hash = QtGui.QAction(MainWindow)
        self.action_item_update_file_hash.setObjectName(_fromUtf8("action_item_update_file_hash"))
        self.action_fix_file_not_found_try_find = QtGui.QAction(MainWindow)
        self.action_fix_file_not_found_try_find.setObjectName(_fromUtf8("action_fix_file_not_found_try_find"))
        self.action_fix_file_not_found_delete = QtGui.QAction(MainWindow)
        self.action_fix_file_not_found_delete.setObjectName(_fromUtf8("action_fix_file_not_found_delete"))
        self.action_item_rebuild_thumbnail = QtGui.QAction(MainWindow)
        self.action_item_rebuild_thumbnail.setObjectName(_fromUtf8("action_item_rebuild_thumbnail"))
        self.action_item_to_external_filemanager = QtGui.QAction(MainWindow)
        self.action_item_to_external_filemanager.setObjectName(_fromUtf8("action_item_to_external_filemanager"))
        self.action_export_selected_items = QtGui.QAction(MainWindow)
        self.action_export_selected_items.setObjectName(_fromUtf8("action_export_selected_items"))
        self.action_export_items_file_paths = QtGui.QAction(MainWindow)
        self.action_export_items_file_paths.setObjectName(_fromUtf8("action_export_items_file_paths"))
        self.actionExportItems = QtGui.QAction(MainWindow)
        self.actionExportItems.setObjectName(_fromUtf8("actionExportItems"))
        self.actionImportItems = QtGui.QAction(MainWindow)
        self.actionImportItems.setObjectName(_fromUtf8("actionImportItems"))
        self.actionAdd_current_repository = QtGui.QAction(MainWindow)
        self.actionAdd_current_repository.setObjectName(_fromUtf8("actionAdd_current_repository"))
        self.actionRemove_current_repository = QtGui.QAction(MainWindow)
        self.actionRemove_current_repository.setObjectName(_fromUtf8("actionRemove_current_repository"))
        self.actionExitReggata = QtGui.QAction(MainWindow)
        self.actionExitReggata.setObjectName(_fromUtf8("actionExitReggata"))
        self.actionManageExtApps = QtGui.QAction(MainWindow)
        self.actionManageExtApps.setObjectName(_fromUtf8("actionManageExtApps"))
        self.menuFavoriteRepos.addAction(self.actionAdd_current_repository)
        self.menuFavoriteRepos.addAction(self.actionRemove_current_repository)
        self.menuRepo.addAction(self.action_repo_create)
        self.menuRepo.addAction(self.action_repo_open)
        self.menuRepo.addAction(self.action_repo_close)
        self.menuRepo.addAction(self.menuFavoriteRepos.menuAction())
        self.menuRepo.addSeparator()
        self.menuRepo.addAction(self.actionManageExtApps)
        self.menuRepo.addSeparator()
        self.menuRepo.addAction(self.actionImportItems)
        self.menuRepo.addSeparator()
        self.menuRepo.addAction(self.actionExitReggata)
        self.menuUser.addAction(self.action_user_create)
        self.menuUser.addAction(self.action_user_login)
        self.menuUser.addAction(self.action_user_logout)
        self.menuUser.addAction(self.action_user_change_pass)
        self.menuHelp.addAction(self.action_help_about)
        self.menubar.addAction(self.menuRepo.menuAction())
        self.menubar.addAction(self.menuUser.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_translate("MainWindow", "Reggata", None))
        self.menuRepo.setTitle(_translate("MainWindow", "&Repository", None))
        self.menuFavoriteRepos.setTitle(_translate("MainWindow", "Favorite repositories...", None))
        self.menuUser.setTitle(_translate("MainWindow", "&User", None))
        self.menuTools.setTitle(_translate("MainWindow", "&Tools", None))
        self.menuHelp.setTitle(_translate("MainWindow", "Help", None))
        self.action_repo_create.setText(_translate("MainWindow", "&New", None))
        self.action_repo_open.setText(_translate("MainWindow", "&Open", None))
        self.action_repo_close.setText(_translate("MainWindow", "&Close", None))
        self.action_item_add.setText(_translate("MainWindow", "Add &one", None))
        self.action_user_create.setText(_translate("MainWindow", "&Create", None))
        self.action_user_login.setText(_translate("MainWindow", "&Login", None))
        self.action_user_logout.setText(_translate("MainWindow", "Log&out", None))
        self.action_item_edit.setText(_translate("MainWindow", "&Edit", None))
        self.action_item_add_many.setText(_translate("MainWindow", "Add &many", None))
        self.action_user_change_pass.setText(_translate("MainWindow", "Change &password", None))
        self.action_item_view.setText(_translate("MainWindow", "&View with external app", None))
        self.action_item_add_many_rec.setText(_translate("MainWindow", "Add many &recursively", None))
        self.action_item_delete.setText(_translate("MainWindow", "&Delete", None))
        self.action_item_view_m3u.setText(_translate("MainWindow", "Create m3u playlist and open it", None))
        self.action_help_about.setText(_translate("MainWindow", "About Reggata", None))
        self.action_item_view_image_viewer.setText(_translate("MainWindow", "View images with built-in viewer", None))
        self.action_item_check_integrity.setText(_translate("MainWindow", "Check &integrity", None))
        self.action_item_fix_history_rec_error.setText(_translate("MainWindow", "Fix history rec error", None))
        self.action_item_fix_hash_error.setText(_translate("MainWindow", "Try find file", None))
        self.action_item_update_file_hash.setText(_translate("MainWindow", "Update hash", None))
        self.action_fix_file_not_found_try_find.setText(_translate("MainWindow", "Try find file", None))
        self.action_fix_file_not_found_delete.setText(_translate("MainWindow", "Delete item\'s reference to file", None))
        self.action_item_rebuild_thumbnail.setText(_translate("MainWindow", "Rebuild &thumbnail", None))
        self.action_item_to_external_filemanager.setText(_translate("MainWindow", "Open external file manager", None))
        self.action_export_selected_items.setText(_translate("MainWindow", "Export items files only", None))
        self.action_export_items_file_paths.setText(_translate("MainWindow", "Export file paths as txt file", None))
        self.actionExportItems.setText(_translate("MainWindow", "Export items (files with metadata)", None))
        self.actionExportItems.setToolTip(_translate("MainWindow", "Export items with files and metadata", None))
        self.actionImportItems.setText(_translate("MainWindow", "Import items", None))
        self.actionAdd_current_repository.setText(_translate("MainWindow", "Add current repository", None))
        self.actionRemove_current_repository.setText(_translate("MainWindow", "Remove current repository", None))
        self.actionExitReggata.setText(_translate("MainWindow", "Exit", None))
        self.actionManageExtApps.setText(_translate("MainWindow", "Manage External Applications", None))

from . import resources_rc
